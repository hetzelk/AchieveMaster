@model AchieveMaster.Models.Request

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCaOfisePaSvsm8bUCzmjJgs9fvDfu7gVc&callback=initialize"></script>
    <script src="http://maps.google.com/maps/api/js?sensor=false"></script>
</head>

<div class="container">
    <div class="col-md-6">
        <h1>@Html.DisplayFor(model => model.Title)</h1>
        <hr />

        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Category)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Category)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.StudentLocation)
            </dt>

            <dd id="StudentLocation">
                @Html.DisplayFor(model => model.StudentLocation)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MeetLocation)
            </dt>

            <dd id="MeetLocation">
                @Html.DisplayFor(model => model.MeetLocation)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.PayRate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PayRate)
            </dd>


        </dl>
        @Html.ActionLink("Contact!", "Create", "Messages", new { title = this.Model.Title, user1 = this.Model.UserID }, new { @Class = "btn BlueBG WhiteFont btn-lg btn-success" })
    </div>
    <div class="col-md-6">
        <h1>Map</h1>
        <hr />
        <div id="map"></div>
        <br/>
        <p id="details"></p>
    </div>
</div>
@*<p>@Html.ActionLink("Back to List", "Index", new { @class = "btn btn-default" })</p>
    <a href="@Url.Action("Index", "Request")" class="btn BlueBG WhiteFont btn-default">Contact User!</a>*@
<a href="@Url.Action("Index", "Request")" class="btn BlueBG WhiteFont btn-default">Back to List</a>

<script>
    var geocoder;
    var map;
    var address1 = document.getElementById("StudentLocation").innerHTML;
    var address2 = document.getElementById("MeetLocation").innerHTML;
    var marker1;
    var marker2;
    function initialize() {
        geocoder = new google.maps.Geocoder();
        var latlng = new google.maps.LatLng(39.817460, -101.487930);
        var myOptions = {
            zoom: 4,
            center: latlng,
            mapTypeControl: true,
            navigationControl: true,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById("map"), myOptions);

        if (geocoder) {
            geocoder.geocode({ 'address': address1 }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (status != google.maps.GeocoderStatus.ZERO_RESULTS) {

                        var marker1 = new google.maps.Marker({
                            position: results[0].geometry.location,
                            map: map,
                            title: address1
                        });

                    } else {
                        alert("No results found for the Student's Address");
                    }
                } else {
                    alert("Geocode was not successful for the following reason: " + status);
                }
            });
        }
        if (geocoder) {
            geocoder.geocode({ 'address': address2 }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (status != google.maps.GeocoderStatus.ZERO_RESULTS) {

                        var marker2 = new google.maps.Marker({
                            position: results[0].geometry.location,
                            map: map,
                            title: address2
                        });

                    } else {
                        alert("No results found for the Student's Address");
                    }
                } else {
                    alert("Geocode was not successful for the following reason: " + status);
                }
            });
        }
        map.fitBounds(bounds);
        var boundsListener = google.maps.event.addListener((map), 'bounds_changed', function (event) {
            this.setZoom(14);
            google.maps.event.removeListener(boundsListener);
        });

    }
</script>